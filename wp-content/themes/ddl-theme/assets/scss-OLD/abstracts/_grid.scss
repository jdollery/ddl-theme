/*-----------------------------------------------------------------------------------*/
/* MODULES */
/*-----------------------------------------------------------------------------------*/

@use 'sass:math';


/*-----------------------------------------------------------------------------------*/
/* VARIABLES */
/*-----------------------------------------------------------------------------------*/

$columns: 12;
$max-width: 144rem;
$gap: #{fluid(10px, 20px)};


/*-----------------------------------------------------------------------------------*/
/* STYLES */
/*-----------------------------------------------------------------------------------*/

/* --------------------- ROW --------------------- */

@mixin cell-row {
  display: flex;
  flex-wrap: wrap;
  gap: $gap;
}

.cell-row {
  @include cell-row;
}


/* --------------------- CELLS --------------------- */

/* --------- MIXIN --------- */

@mixin cell($size) {
  
  @for $i from 1 through $columns - 1 {
    $width: math.percentage(math.div($i, $columns));
    @if($size == $i) {
      position: relative;
      flex: 0 0 auto;
      width: calc(#{$width} - $gap / 2);
      max-width: 100%;
    }
  }

  @if($size == 0) {
    position: relative;
    flex: 1 0 0%;
    width: 100%;
    max-width: 100%;
  } @else if ($size == auto) {
    position: relative;
    flex: 0 0 auto;
    width: auto;
    max-width: 100%;
  } @else if ($size == 12) {
    position: relative;
    flex: 0 0 auto;
    width: 100%;
    max-width: 100%;
  }
  
}


/* --------- CLASS --------- */

// @for $i from 1 through $columns {
//   $width: math.percentage(math.div($i, $columns));

//   .cell-#{$i} {
//     position: relative;
//     flex: 0 0 auto;
//     width: calc($width - $gap / 2);
//     max-width: 100%;
//   }

// }

// .cell-0 {
//   position: relative;
//   flex: 1 0 0%;
//   width: 100%;
//   max-width: 100%;
// }

// .cell-auto {
//   position: relative;
//   flex: 0 0 auto;
//   width: auto;
//   max-width: 100%;
// }


// @each $breakpoint in map-keys($breakpoint-widths) {
//   @include media-up($breakpoint) {
//     $infix: breakpoint-infix($breakpoint, $breakpoint-widths);

//     @for $i from 1 through $columns {
//       $width: math.percentage(math.div($i, $columns));

//       .cell#{$infix}-#{$i} {
//         position: relative;
//         flex: 0 0 auto;
//         width: calc($width - $gap / 2);
//         max-width: 100%;
//       }

//     }

//     .cell#{$infix}-0 {
//       position: relative;
//       flex: 1 0 0%;
//       width: 100%;
//       max-width: 100%;
//     }

//     .cell#{$infix}-auto {
//       position: relative;
//       flex: 0 0 auto;
//       width: auto;
//       max-width: 100%;
//     }

//   }

// }


/* --------------------- CELL FIXED --------------------- */

@mixin cell-fixed {
  position: relative;
  flex-shrink: 0;
  width: 100%;
  max-width: 100%;
  max-width: $max-width;
  margin-right: auto;
  margin-left: auto;
}

.cell-fixed {
  @include cell-fixed;
}