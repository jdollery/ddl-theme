/*-----------------------------------------------------------------------------------*/
/* MODULES */
/*-----------------------------------------------------------------------------------*/

@use "sass:math";
@use "sass:map";

@use 'abstracts/functions' as *;
@use 'abstracts/media' as *;
@use 'abstracts/variables' as *;


/*-----------------------------------------------------------------------------------*/
/* MAPS */
/*-----------------------------------------------------------------------------------*/

$colors: (
  "white": $white,
  "black": $black,
  "grey": $grey,
  "grey-dark": $grey-dark,
  "grey-light": $grey-light,
  "accent": $accent,
  "danger": $danger,
  "success": $success,
);

// color.adjust(map.get($colors, "accent"), $lightness: 10%);


/*-----------------------------------------------------------------------------------*/
/* ANIMATIONS */
/*-----------------------------------------------------------------------------------*/

@mixin animation($animation) {
  -webkit-animation: #{$animation}; 
  -moz-animation: #{$animation};
  -o-animation: #{$animation}; 
  animation: #{$animation};
}

@mixin keyframes($keyframes) {
  
  @-webkit-keyframes #{$keyframes} {
    @content;
  }

  @-moz-keyframes #{$keyframes} {
    @content;
  }

  @-o-keyframes #{$keyframes} {
    @content;
  }

  @keyframes #{$keyframes} {
    @content;
  }

}


/*-----------------------------------------------------------------------------------*/
/* PROPERTIES */
/*-----------------------------------------------------------------------------------*/

@mixin object-fit ($object-fit) {
  -o-object-fit: $object-fit;
  object-fit: $object-fit;
}

@mixin object-position ($object-position) {
  -o-object-position: $object-position;
  object-position: $object-position;
}

@mixin box-shadow ($box-shadow) {
  -webkit-box-shadow: $box-shadow;
  -moz-box-shadow: $box-shadow;
  box-shadow: $box-shadow;
}


/*-----------------------------------------------------------------------------------*/
/* STATES */
/*-----------------------------------------------------------------------------------*/

@mixin hover {
  &:hover { @content; }
}

@mixin hover-focus {
  &:hover,
  &:focus {
    @content;
  }
}

@mixin plain-hover-focus {
  &,
  &:hover,
  &:focus {
    @content;
  }
}

@mixin hover-focus-active {
  &:hover,
  &:focus,
  &:active {
    @content;
  }
}


@mixin focus {
  &:focus, &:focus:active {
    @content;
  }
}

@mixin active {
  &:active {
    @content;
  }
}

@mixin visited {
  &:visited {
    @content;
  }
}

@mixin placeholder {

  ::-webkit-input-placeholder {
    @content;
  }

  ::-moz-placeholder {
    @content;
  }

  :-ms-input-placeholder {
    @content;
  }

  :-moz-placeholder {
    @content;
  }

}


/*-----------------------------------------------------------------------------------*/
/* TRANSITIONS */
/*-----------------------------------------------------------------------------------*/

@mixin transition($transition) {
  transition: $transition 0.3s cubic-bezier(0.5, 0, 0.5, 1);
}


/*-----------------------------------------------------------------------------------*/
/* FIXED WIDTH */
/*-----------------------------------------------------------------------------------*/

@mixin fixed {
  position: relative;
  width: 100%;
  max-width: $max-width;
  margin-right: auto;
  margin-left: auto;

  @include media-min($max-width) {
    max-width: 205rem;
  }

}


/*-----------------------------------------------------------------------------------*/
/* TEXT COLOUR */
/*-----------------------------------------------------------------------------------*/

@each $name, $color in $colors {
  .color--#{$name} {
    color: $color;
  }
}


/*-----------------------------------------------------------------------------------*/
/* HIDDEN */
/*-----------------------------------------------------------------------------------*/

@mixin hidden($breakpoints: $breakpoint-widths) {
  @each $breakpoint in $breakpoints {
    @include media-up ($breakpoint) {
      display: none !important;
    }
  }
}

@each $breakpoint in map.keys($breakpoint-widths) {

  @include media-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $breakpoint-widths);
    .hidden-#{$infix} { display: none !important; }
  }

}


@mixin visible($breakpoints: $breakpoint-widths) {
  @each $breakpoint in $breakpoints {
    @include media-down ($breakpoint) {
      display: none !important;
    }
  }
}

@each $breakpoint in map.keys($breakpoint-widths) {

  @include media-down($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $breakpoint-widths);
    .visible-#{$infix} { display: none !important; }
  }

}


.hidden {
  display: none;
}


/*-----------------------------------------------------------------------------------*/
/* LISTS */
/*-----------------------------------------------------------------------------------*/

@mixin list-unstyled {

  &:not(.list--exempt) {
    list-style: none;
    padding-left: 0;

    li {
      margin: 0;

      &::marker {
        display: none;
      }

    }

  }

}

@mixin list-bullet {

  &:not(.list--exempt) {

    list-style: none;
    padding-left: $list-indent;

    li {
      position: relative;
      margin: 0;

      &::marker {
        display: none;
      }

      &:not(:last-child) {
        margin-bottom: $list-gutter;
      }

      &::before {
        position: absolute;
        left: -$list-indent;
        top: 0.9rem;
        display: block;
        content: '';
        width: $list-bullet-size;
        height: $list-bullet-size;
        background: $list-bullet-color;
        border-radius: 50%;
      }
      
    }

  }

}

@mixin list-number {
  padding-left: $list-indent;
  counter-reset: custom-counter;
  list-style: none;

  li {
    position: relative;
    margin: 0;
    counter-increment: custom-counter;

    &::marker {
      display: none;
    }

    &:not(:last-child) {
      margin-bottom: $list-gutter;
    }

    &::before {
      position: absolute;
      left: -$list-indent;
      top: 0;
      display: block;
      content: counter(custom-counter) ".";
      font-variation-settings: "wght" $list-number-weight;
      color: $list-bullet-color;
    }

  }

}

@mixin list-inline {
  list-style: none;
  padding: 0;
  margin: 0;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: $list-inline-gap;

  li {
    display: block;
  }

}